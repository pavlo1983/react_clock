{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","this","interval","setInterval","Date","setState","toLocaleTimeString","console","log","prevProps","props","name","clearInterval","React","Component","App","clockIsVisible","clockName","className","type","onClick","randomNumber","Math","ceil","random","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,MAFV,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,SAAWC,aAAY,WAC1B,IAAMH,EAAO,IAAII,KAEjB,EAAKC,SAAS,CAAEL,KAAMA,EAAKM,uBAEvBC,QAAQC,IAAI,EAAKT,MAAMC,QAC1B,OAZP,gCAeE,SAAmBS,GACbR,KAAKS,MAAMC,OAASF,EAAUE,MAEhCJ,QAAQC,IAAR,qCAA0CC,EAAUE,KAApD,eAA+DV,KAAKS,MAAMC,SAlBhF,kCAsBE,WACEC,cAAcX,KAAKC,YAvBvB,oBA0BE,WACE,OACE,oCACE,2CAEG,IACAD,KAAKF,MAAMC,WAhCtB,GAA2Ba,IAAMC,WCwDlBC,G,kNAtDbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACCD,EAAmBf,KAAKF,MAAxBiB,eAER,OACE,oCACE,yBAAKE,UAAU,aACb,wBAAIA,UAAU,SAAd,eACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,uBACb,4BACEC,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKf,SAAS,CAAEW,gBAAgB,MAJpC,cASA,4BACEG,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKf,SAAS,CAAEW,gBAAgB,MAJpC,cASA,4BACEG,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,IAAMC,EAAeC,KAAKC,KAAqB,GAAhBD,KAAKE,UAEpC,EAAKnB,SAAS,CAAEY,UAAWI,MAN/B,oBAYAL,GACF,kBAAC,EAAD,CAAOL,KAAMV,KAAKF,MAAMkB,mB,GA9ClBJ,IAAMC,YCAxBW,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8403363a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: null,\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date: date.toLocaleTimeString() });\n      // eslint-disable-next-line\n          console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <>\n        <p>\n          Current time:\n          {' '}\n          {this.state.date}\n        </p>\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    clockIsVisible: true,\n    clockName: 0,\n  }\n\n  render() {\n    const { clockIsVisible } = this.state;\n\n    return (\n      <>\n        <div className=\"Container\">\n          <h1 className=\"Title\">React clock</h1>\n          <div className=\"App\">\n            <div className=\"App__button-wrapper\">\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={() => {\n                  this.setState({ clockIsVisible: true });\n                }}\n              >\n                Show Clock\n              </button>\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={() => {\n                  this.setState({ clockIsVisible: false });\n                }}\n              >\n                Hide Clock\n              </button>\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={() => {\n                  const randomNumber = Math.ceil(Math.random() * 10);\n\n                  this.setState({ clockName: randomNumber });\n                }}\n              >\n                Set random name\n              </button>\n            </div>\n            { clockIsVisible && (\n            <Clock name={this.state.clockName} />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}